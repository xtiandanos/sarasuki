{"ast":null,"code":"'use strict';\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar $ = require('../internals/export');\n\nvar call = require('../internals/function-call');\n\nvar aCallable = require('../internals/a-callable');\n\nvar anObject = require('../internals/an-object');\n\nvar iterate = require('../internals/iterate'); // `Set.prototype.isSupersetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSupersetOf\n\n\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  isSupersetOf: function isSupersetOf(iterable) {\n    var set = anObject(this);\n    var hasCheck = aCallable(set.has);\n    return !iterate(iterable, function (value, stop) {\n      if (call(hasCheck, set, value) === false) return stop();\n    }, {\n      INTERRUPTED: true\n    }).stopped;\n  }\n});","map":{"version":3,"sources":["/Users/christiandanos/Desktop/sarasuki/base/node_modules/core-js/modules/esnext.set.is-superset-of.js"],"names":["IS_PURE","require","$","call","aCallable","anObject","iterate","target","proto","real","forced","isSupersetOf","iterable","set","hasCheck","has","value","stop","INTERRUPTED","stopped"],"mappings":"AAAA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIC,CAAC,GAAGD,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAC,CAAC,CAAC;AAAEK,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAEV;AAAlD,CAAD,EAA8D;AAC7DW,EAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBC,QAAtB,EAAgC;AAC5C,QAAIC,GAAG,GAAGR,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIS,QAAQ,GAAGV,SAAS,CAACS,GAAG,CAACE,GAAL,CAAxB;AACA,WAAO,CAACT,OAAO,CAACM,QAAD,EAAW,UAAUI,KAAV,EAAiBC,IAAjB,EAAuB;AAC/C,UAAId,IAAI,CAACW,QAAD,EAAWD,GAAX,EAAgBG,KAAhB,CAAJ,KAA+B,KAAnC,EAA0C,OAAOC,IAAI,EAAX;AAC3C,KAFc,EAEZ;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAFY,CAAP,CAEkBC,OAF1B;AAGD;AAP4D,CAA9D,CAAD","sourcesContent":["'use strict';\nvar IS_PURE = require('../internals/is-pure');\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.isSupersetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSupersetOf\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  isSupersetOf: function isSupersetOf(iterable) {\n    var set = anObject(this);\n    var hasCheck = aCallable(set.has);\n    return !iterate(iterable, function (value, stop) {\n      if (call(hasCheck, set, value) === false) return stop();\n    }, { INTERRUPTED: true }).stopped;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}
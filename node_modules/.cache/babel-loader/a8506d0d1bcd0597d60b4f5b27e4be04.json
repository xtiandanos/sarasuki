{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar call = require('../internals/function-call');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar aCallable = require('../internals/a-callable');\n\nvar getIterator = require('../internals/get-iterator');\n\nvar iterate = require('../internals/iterate');\n\nvar push = uncurryThis([].push); // `Map.groupBy` method\n// https://github.com/tc39/proposal-collection-methods\n\n$({\n  target: 'Map',\n  stat: true\n}, {\n  groupBy: function groupBy(iterable, keyDerivative) {\n    aCallable(keyDerivative);\n    var iterator = getIterator(iterable);\n    var newMap = new this();\n    var has = aCallable(newMap.has);\n    var get = aCallable(newMap.get);\n    var set = aCallable(newMap.set);\n    iterate(iterator, function (element) {\n      var derivedKey = keyDerivative(element);\n      if (!call(has, newMap, derivedKey)) call(set, newMap, derivedKey, [element]);else push(call(get, newMap, derivedKey), element);\n    }, {\n      IS_ITERATOR: true\n    });\n    return newMap;\n  }\n});","map":{"version":3,"sources":["/Users/christiandanos/Desktop/sarasuki/base/node_modules/core-js/modules/esnext.map.group-by.js"],"names":["$","require","call","uncurryThis","aCallable","getIterator","iterate","push","target","stat","groupBy","iterable","keyDerivative","iterator","newMap","has","get","set","element","derivedKey","IS_ITERATOR"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,oCAAD,CAAzB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAII,WAAW,GAAGJ,OAAO,CAAC,2BAAD,CAAzB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,sBAAD,CAArB;;AAEA,IAAIM,IAAI,GAAGJ,WAAW,CAAC,GAAGI,IAAJ,CAAtB,C,CAEA;AACA;;AACAP,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAAD,EAAgC;AAC/BC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,QAAjB,EAA2BC,aAA3B,EAA0C;AACjDR,IAAAA,SAAS,CAACQ,aAAD,CAAT;AACA,QAAIC,QAAQ,GAAGR,WAAW,CAACM,QAAD,CAA1B;AACA,QAAIG,MAAM,GAAG,IAAI,IAAJ,EAAb;AACA,QAAIC,GAAG,GAAGX,SAAS,CAACU,MAAM,CAACC,GAAR,CAAnB;AACA,QAAIC,GAAG,GAAGZ,SAAS,CAACU,MAAM,CAACE,GAAR,CAAnB;AACA,QAAIC,GAAG,GAAGb,SAAS,CAACU,MAAM,CAACG,GAAR,CAAnB;AACAX,IAAAA,OAAO,CAACO,QAAD,EAAW,UAAUK,OAAV,EAAmB;AACnC,UAAIC,UAAU,GAAGP,aAAa,CAACM,OAAD,CAA9B;AACA,UAAI,CAAChB,IAAI,CAACa,GAAD,EAAMD,MAAN,EAAcK,UAAd,CAAT,EAAoCjB,IAAI,CAACe,GAAD,EAAMH,MAAN,EAAcK,UAAd,EAA0B,CAACD,OAAD,CAA1B,CAAJ,CAApC,KACKX,IAAI,CAACL,IAAI,CAACc,GAAD,EAAMF,MAAN,EAAcK,UAAd,CAAL,EAAgCD,OAAhC,CAAJ;AACN,KAJM,EAIJ;AAAEE,MAAAA,WAAW,EAAE;AAAf,KAJI,CAAP;AAKA,WAAON,MAAP;AACD;AAd8B,CAAhC,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar getIterator = require('../internals/get-iterator');\nvar iterate = require('../internals/iterate');\n\nvar push = uncurryThis([].push);\n\n// `Map.groupBy` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', stat: true }, {\n  groupBy: function groupBy(iterable, keyDerivative) {\n    aCallable(keyDerivative);\n    var iterator = getIterator(iterable);\n    var newMap = new this();\n    var has = aCallable(newMap.has);\n    var get = aCallable(newMap.get);\n    var set = aCallable(newMap.set);\n    iterate(iterator, function (element) {\n      var derivedKey = keyDerivative(element);\n      if (!call(has, newMap, derivedKey)) call(set, newMap, derivedKey, [element]);\n      else push(call(get, newMap, derivedKey), element);\n    }, { IS_ITERATOR: true });\n    return newMap;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict'; // TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\n\nrequire('../modules/es.string.iterator');\n\nvar $ = require('../internals/export');\n\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar USE_NATIVE_URL = require('../internals/native-url');\n\nvar global = require('../internals/global');\n\nvar bind = require('../internals/function-bind-context');\n\nvar call = require('../internals/function-call');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar defineProperties = require('../internals/object-define-properties');\n\nvar redefine = require('../internals/redefine');\n\nvar anInstance = require('../internals/an-instance');\n\nvar hasOwn = require('../internals/has-own-property');\n\nvar assign = require('../internals/object-assign');\n\nvar arrayFrom = require('../internals/array-from');\n\nvar arraySlice = require('../internals/array-slice');\n\nvar codeAt = require('../internals/string-multibyte').codeAt;\n\nvar toASCII = require('../internals/string-punycode-to-ascii');\n\nvar $toString = require('../internals/to-string');\n\nvar setToStringTag = require('../internals/set-to-string-tag');\n\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\n\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\nvar NativeURL = global.URL;\nvar TypeError = global.TypeError;\nvar parseInt = global.parseInt;\nvar floor = Math.floor;\nvar pow = Math.pow;\nvar charAt = uncurryThis(''.charAt);\nvar exec = uncurryThis(/./.exec);\nvar join = uncurryThis([].join);\nvar numberToString = uncurryThis(1.0.toString);\nvar pop = uncurryThis([].pop);\nvar push = uncurryThis([].push);\nvar replace = uncurryThis(''.replace);\nvar shift = uncurryThis([].shift);\nvar split = uncurryThis(''.split);\nvar stringSlice = uncurryThis(''.slice);\nvar toLowerCase = uncurryThis(''.toLowerCase);\nvar unshift = uncurryThis([].unshift);\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\nvar ALPHA = /[a-z]/i; // eslint-disable-next-line regexp/no-obscure-range -- safe\n\nvar ALPHANUMERIC = /[\\d+-.a-z]/i;\nvar DIGIT = /\\d/;\nvar HEX_START = /^0x/i;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\da-f]+$/i;\n/* eslint-disable regexp/no-control-character -- safe */\n\nvar FORBIDDEN_HOST_CODE_POINT = /[\\0\\t\\n\\r #%/:<>?@[\\\\\\]^|]/;\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\0\\t\\n\\r #/:<>?@[\\\\\\]^|]/;\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u0020]+|[\\u0000-\\u0020]+$/g;\nvar TAB_AND_NEW_LINE = /[\\t\\n\\r]/g;\n/* eslint-enable regexp/no-control-character -- safe */\n\nvar EOF;\n\nvar parseHost = function (url, input) {\n  var result, codePoints, index;\n\n  if (charAt(input, 0) == '[') {\n    if (charAt(input, input.length - 1) != ']') return INVALID_HOST;\n    result = parseIPv6(stringSlice(input, 1, -1));\n    if (!result) return INVALID_HOST;\n    url.host = result; // opaque host\n  } else if (!isSpecial(url)) {\n    if (exec(FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT, input)) return INVALID_HOST;\n    result = '';\n    codePoints = arrayFrom(input);\n\n    for (index = 0; index < codePoints.length; index++) {\n      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n    }\n\n    url.host = result;\n  } else {\n    input = toASCII(input);\n    if (exec(FORBIDDEN_HOST_CODE_POINT, input)) return INVALID_HOST;\n    result = parseIPv4(input);\n    if (result === null) return INVALID_HOST;\n    url.host = result;\n  }\n};\n\nvar parseIPv4 = function (input) {\n  var parts = split(input, '.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.length--;\n  }\n\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n\n    if (part.length > 1 && charAt(part, 0) == '0') {\n      radix = exec(HEX_START, part) ? 16 : 8;\n      part = stringSlice(part, radix == 8 ? 1 : 2);\n    }\n\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!exec(radix == 10 ? DEC : radix == 8 ? OCT : HEX, part)) return input;\n      number = parseInt(part, radix);\n    }\n\n    push(numbers, number);\n  }\n\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n\n  ipv4 = pop(numbers);\n\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n\n  return ipv4;\n}; // eslint-disable-next-line max-statements -- TODO\n\n\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var chr = function () {\n    return charAt(input, pointer);\n  };\n\n  if (chr() == ':') {\n    if (charAt(input, 1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n\n  while (chr()) {\n    if (pieceIndex == 8) return;\n\n    if (chr() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n\n    value = length = 0;\n\n    while (length < 4 && exec(HEX, chr())) {\n      value = value * 16 + parseInt(chr(), 16);\n      pointer++;\n      length++;\n    }\n\n    if (chr() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n\n      while (chr()) {\n        ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (chr() == '.' && numbersSeen < 4) pointer++;else return;\n        }\n\n        if (!exec(DIGIT, chr())) return;\n\n        while (exec(DIGIT, chr())) {\n          number = parseInt(chr(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;else if (ipv4Piece == 0) return;else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n\n      if (numbersSeen != 4) return;\n      break;\n    } else if (chr() == ':') {\n      pointer++;\n      if (!chr()) return;\n    } else if (chr()) return;\n\n    address[pieceIndex++] = value;\n  }\n\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n\n  return maxIndex;\n};\n\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0; // ipv4\n\n  if (typeof host == 'number') {\n    result = [];\n\n    for (index = 0; index < 4; index++) {\n      unshift(result, host % 256);\n      host = floor(host / 256);\n    }\n\n    return join(result, '.'); // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += numberToString(host[index], 16);\n        if (index < 7) result += ':';\n      }\n    }\n\n    return '[' + result + ']';\n  }\n\n  return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1,\n  '\"': 1,\n  '<': 1,\n  '>': 1,\n  '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1,\n  '?': 1,\n  '{': 1,\n  '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1,\n  ':': 1,\n  ';': 1,\n  '=': 1,\n  '@': 1,\n  '[': 1,\n  '\\\\': 1,\n  ']': 1,\n  '^': 1,\n  '|': 1\n});\n\nvar percentEncode = function (chr, set) {\n  var code = codeAt(chr, 0);\n  return code > 0x20 && code < 0x7F && !hasOwn(set, chr) ? chr : encodeURIComponent(chr);\n};\n\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nvar isSpecial = function (url) {\n  return hasOwn(specialSchemes, url.scheme);\n};\n\nvar includesCredentials = function (url) {\n  return url.username != '' || url.password != '';\n};\n\nvar cannotHaveUsernamePasswordPort = function (url) {\n  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n};\n\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && exec(ALPHA, charAt(string, 0)) && ((second = charAt(string, 1)) == ':' || !normalized && second == '|');\n};\n\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(stringSlice(string, 0, 2)) && (string.length == 2 || (third = charAt(string, 2)) === '/' || third === '\\\\' || third === '?' || third === '#');\n};\n\nvar shortenURLsPath = function (url) {\n  var path = url.path;\n  var pathSize = path.length;\n\n  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n    path.length--;\n  }\n};\n\nvar isSingleDot = function (segment) {\n  return segment === '.' || toLowerCase(segment) === '%2e';\n};\n\nvar isDoubleDot = function (segment) {\n  segment = toLowerCase(segment);\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n}; // States:\n\n\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {}; // eslint-disable-next-line max-statements -- TODO\n\nvar parseURL = function (url, input, stateOverride, base) {\n  var state = stateOverride || SCHEME_START;\n  var pointer = 0;\n  var buffer = '';\n  var seenAt = false;\n  var seenBracket = false;\n  var seenPasswordToken = false;\n  var codePoints, chr, bufferCodePoints, failure;\n\n  if (!stateOverride) {\n    url.scheme = '';\n    url.username = '';\n    url.password = '';\n    url.host = null;\n    url.port = null;\n    url.path = [];\n    url.query = null;\n    url.fragment = null;\n    url.cannotBeABaseURL = false;\n    input = replace(input, LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n  }\n\n  input = replace(input, TAB_AND_NEW_LINE, '');\n  codePoints = arrayFrom(input);\n\n  while (pointer <= codePoints.length) {\n    chr = codePoints[pointer];\n\n    switch (state) {\n      case SCHEME_START:\n        if (chr && exec(ALPHA, chr)) {\n          buffer += toLowerCase(chr);\n          state = SCHEME;\n        } else if (!stateOverride) {\n          state = NO_SCHEME;\n          continue;\n        } else return INVALID_SCHEME;\n\n        break;\n\n      case SCHEME:\n        if (chr && (exec(ALPHANUMERIC, chr) || chr == '+' || chr == '-' || chr == '.')) {\n          buffer += toLowerCase(chr);\n        } else if (chr == ':') {\n          if (stateOverride && (isSpecial(url) != hasOwn(specialSchemes, buffer) || buffer == 'file' && (includesCredentials(url) || url.port !== null) || url.scheme == 'file' && !url.host)) return;\n          url.scheme = buffer;\n\n          if (stateOverride) {\n            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n            return;\n          }\n\n          buffer = '';\n\n          if (url.scheme == 'file') {\n            state = FILE;\n          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n            state = SPECIAL_RELATIVE_OR_AUTHORITY;\n          } else if (isSpecial(url)) {\n            state = SPECIAL_AUTHORITY_SLASHES;\n          } else if (codePoints[pointer + 1] == '/') {\n            state = PATH_OR_AUTHORITY;\n            pointer++;\n          } else {\n            url.cannotBeABaseURL = true;\n            push(url.path, '');\n            state = CANNOT_BE_A_BASE_URL_PATH;\n          }\n        } else if (!stateOverride) {\n          buffer = '';\n          state = NO_SCHEME;\n          pointer = 0;\n          continue;\n        } else return INVALID_SCHEME;\n\n        break;\n\n      case NO_SCHEME:\n        if (!base || base.cannotBeABaseURL && chr != '#') return INVALID_SCHEME;\n\n        if (base.cannotBeABaseURL && chr == '#') {\n          url.scheme = base.scheme;\n          url.path = arraySlice(base.path);\n          url.query = base.query;\n          url.fragment = '';\n          url.cannotBeABaseURL = true;\n          state = FRAGMENT;\n          break;\n        }\n\n        state = base.scheme == 'file' ? FILE : RELATIVE;\n        continue;\n\n      case SPECIAL_RELATIVE_OR_AUTHORITY:\n        if (chr == '/' && codePoints[pointer + 1] == '/') {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          pointer++;\n        } else {\n          state = RELATIVE;\n          continue;\n        }\n\n        break;\n\n      case PATH_OR_AUTHORITY:\n        if (chr == '/') {\n          state = AUTHORITY;\n          break;\n        } else {\n          state = PATH;\n          continue;\n        }\n\n      case RELATIVE:\n        url.scheme = base.scheme;\n\n        if (chr == EOF) {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = arraySlice(base.path);\n          url.query = base.query;\n        } else if (chr == '/' || chr == '\\\\' && isSpecial(url)) {\n          state = RELATIVE_SLASH;\n        } else if (chr == '?') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = arraySlice(base.path);\n          url.query = '';\n          state = QUERY;\n        } else if (chr == '#') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = arraySlice(base.path);\n          url.query = base.query;\n          url.fragment = '';\n          state = FRAGMENT;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = arraySlice(base.path);\n          url.path.length--;\n          state = PATH;\n          continue;\n        }\n\n        break;\n\n      case RELATIVE_SLASH:\n        if (isSpecial(url) && (chr == '/' || chr == '\\\\')) {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        } else if (chr == '/') {\n          state = AUTHORITY;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          state = PATH;\n          continue;\n        }\n\n        break;\n\n      case SPECIAL_AUTHORITY_SLASHES:\n        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        if (chr != '/' || charAt(buffer, pointer + 1) != '/') continue;\n        pointer++;\n        break;\n\n      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n        if (chr != '/' && chr != '\\\\') {\n          state = AUTHORITY;\n          continue;\n        }\n\n        break;\n\n      case AUTHORITY:\n        if (chr == '@') {\n          if (seenAt) buffer = '%40' + buffer;\n          seenAt = true;\n          bufferCodePoints = arrayFrom(buffer);\n\n          for (var i = 0; i < bufferCodePoints.length; i++) {\n            var codePoint = bufferCodePoints[i];\n\n            if (codePoint == ':' && !seenPasswordToken) {\n              seenPasswordToken = true;\n              continue;\n            }\n\n            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n            if (seenPasswordToken) url.password += encodedCodePoints;else url.username += encodedCodePoints;\n          }\n\n          buffer = '';\n        } else if (chr == EOF || chr == '/' || chr == '?' || chr == '#' || chr == '\\\\' && isSpecial(url)) {\n          if (seenAt && buffer == '') return INVALID_AUTHORITY;\n          pointer -= arrayFrom(buffer).length + 1;\n          buffer = '';\n          state = HOST;\n        } else buffer += chr;\n\n        break;\n\n      case HOST:\n      case HOSTNAME:\n        if (stateOverride && url.scheme == 'file') {\n          state = FILE_HOST;\n          continue;\n        } else if (chr == ':' && !seenBracket) {\n          if (buffer == '') return INVALID_HOST;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PORT;\n          if (stateOverride == HOSTNAME) return;\n        } else if (chr == EOF || chr == '/' || chr == '?' || chr == '#' || chr == '\\\\' && isSpecial(url)) {\n          if (isSpecial(url) && buffer == '') return INVALID_HOST;\n          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PATH_START;\n          if (stateOverride) return;\n          continue;\n        } else {\n          if (chr == '[') seenBracket = true;else if (chr == ']') seenBracket = false;\n          buffer += chr;\n        }\n\n        break;\n\n      case PORT:\n        if (exec(DIGIT, chr)) {\n          buffer += chr;\n        } else if (chr == EOF || chr == '/' || chr == '?' || chr == '#' || chr == '\\\\' && isSpecial(url) || stateOverride) {\n          if (buffer != '') {\n            var port = parseInt(buffer, 10);\n            if (port > 0xFFFF) return INVALID_PORT;\n            url.port = isSpecial(url) && port === specialSchemes[url.scheme] ? null : port;\n            buffer = '';\n          }\n\n          if (stateOverride) return;\n          state = PATH_START;\n          continue;\n        } else return INVALID_PORT;\n\n        break;\n\n      case FILE:\n        url.scheme = 'file';\n        if (chr == '/' || chr == '\\\\') state = FILE_SLASH;else if (base && base.scheme == 'file') {\n          if (chr == EOF) {\n            url.host = base.host;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n          } else if (chr == '?') {\n            url.host = base.host;\n            url.path = arraySlice(base.path);\n            url.query = '';\n            state = QUERY;\n          } else if (chr == '#') {\n            url.host = base.host;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            if (!startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              shortenURLsPath(url);\n            }\n\n            state = PATH;\n            continue;\n          }\n        } else {\n          state = PATH;\n          continue;\n        }\n        break;\n\n      case FILE_SLASH:\n        if (chr == '/' || chr == '\\\\') {\n          state = FILE_HOST;\n          break;\n        }\n\n        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {\n          if (isWindowsDriveLetter(base.path[0], true)) push(url.path, base.path[0]);else url.host = base.host;\n        }\n\n        state = PATH;\n        continue;\n\n      case FILE_HOST:\n        if (chr == EOF || chr == '/' || chr == '\\\\' || chr == '?' || chr == '#') {\n          if (!stateOverride && isWindowsDriveLetter(buffer)) {\n            state = PATH;\n          } else if (buffer == '') {\n            url.host = '';\n            if (stateOverride) return;\n            state = PATH_START;\n          } else {\n            failure = parseHost(url, buffer);\n            if (failure) return failure;\n            if (url.host == 'localhost') url.host = '';\n            if (stateOverride) return;\n            buffer = '';\n            state = PATH_START;\n          }\n\n          continue;\n        } else buffer += chr;\n\n        break;\n\n      case PATH_START:\n        if (isSpecial(url)) {\n          state = PATH;\n          if (chr != '/' && chr != '\\\\') continue;\n        } else if (!stateOverride && chr == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (!stateOverride && chr == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (chr != EOF) {\n          state = PATH;\n          if (chr != '/') continue;\n        }\n\n        break;\n\n      case PATH:\n        if (chr == EOF || chr == '/' || chr == '\\\\' && isSpecial(url) || !stateOverride && (chr == '?' || chr == '#')) {\n          if (isDoubleDot(buffer)) {\n            shortenURLsPath(url);\n\n            if (chr != '/' && !(chr == '\\\\' && isSpecial(url))) {\n              push(url.path, '');\n            }\n          } else if (isSingleDot(buffer)) {\n            if (chr != '/' && !(chr == '\\\\' && isSpecial(url))) {\n              push(url.path, '');\n            }\n          } else {\n            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n              if (url.host) url.host = '';\n              buffer = charAt(buffer, 0) + ':'; // normalize windows drive letter\n            }\n\n            push(url.path, buffer);\n          }\n\n          buffer = '';\n\n          if (url.scheme == 'file' && (chr == EOF || chr == '?' || chr == '#')) {\n            while (url.path.length > 1 && url.path[0] === '') {\n              shift(url.path);\n            }\n          }\n\n          if (chr == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          }\n        } else {\n          buffer += percentEncode(chr, pathPercentEncodeSet);\n        }\n\n        break;\n\n      case CANNOT_BE_A_BASE_URL_PATH:\n        if (chr == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (chr == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (chr != EOF) {\n          url.path[0] += percentEncode(chr, C0ControlPercentEncodeSet);\n        }\n\n        break;\n\n      case QUERY:\n        if (!stateOverride && chr == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (chr != EOF) {\n          if (chr == \"'\" && isSpecial(url)) url.query += '%27';else if (chr == '#') url.query += '%23';else url.query += percentEncode(chr, C0ControlPercentEncodeSet);\n        }\n\n        break;\n\n      case FRAGMENT:\n        if (chr != EOF) url.fragment += percentEncode(chr, fragmentPercentEncodeSet);\n        break;\n    }\n\n    pointer++;\n  }\n}; // `URL` constructor\n// https://url.spec.whatwg.org/#url-class\n\n\nvar URLConstructor = function URL(url\n/* , base */\n) {\n  var that = anInstance(this, URLPrototype);\n  var base = arguments.length > 1 ? arguments[1] : undefined;\n  var urlString = $toString(url);\n  var state = setInternalState(that, {\n    type: 'URL'\n  });\n  var baseState, failure;\n\n  if (base !== undefined) {\n    try {\n      baseState = getInternalURLState(base);\n    } catch (error) {\n      failure = parseURL(baseState = {}, $toString(base));\n      if (failure) throw TypeError(failure);\n    }\n  }\n\n  failure = parseURL(state, urlString, null, baseState);\n  if (failure) throw TypeError(failure);\n  var searchParams = state.searchParams = new URLSearchParams();\n  var searchParamsState = getInternalSearchParamsState(searchParams);\n  searchParamsState.updateSearchParams(state.query);\n\n  searchParamsState.updateURL = function () {\n    state.query = $toString(searchParams) || null;\n  };\n\n  if (!DESCRIPTORS) {\n    that.href = call(serializeURL, that);\n    that.origin = call(getOrigin, that);\n    that.protocol = call(getProtocol, that);\n    that.username = call(getUsername, that);\n    that.password = call(getPassword, that);\n    that.host = call(getHost, that);\n    that.hostname = call(getHostname, that);\n    that.port = call(getPort, that);\n    that.pathname = call(getPathname, that);\n    that.search = call(getSearch, that);\n    that.searchParams = call(getSearchParams, that);\n    that.hash = call(getHash, that);\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar serializeURL = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var username = url.username;\n  var password = url.password;\n  var host = url.host;\n  var port = url.port;\n  var path = url.path;\n  var query = url.query;\n  var fragment = url.fragment;\n  var output = scheme + ':';\n\n  if (host !== null) {\n    output += '//';\n\n    if (includesCredentials(url)) {\n      output += username + (password ? ':' + password : '') + '@';\n    }\n\n    output += serializeHost(host);\n    if (port !== null) output += ':' + port;\n  } else if (scheme == 'file') output += '//';\n\n  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';\n  if (query !== null) output += '?' + query;\n  if (fragment !== null) output += '#' + fragment;\n  return output;\n};\n\nvar getOrigin = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var port = url.port;\n  if (scheme == 'blob') try {\n    return new URLConstructor(scheme.path[0]).origin;\n  } catch (error) {\n    return 'null';\n  }\n  if (scheme == 'file' || !isSpecial(url)) return 'null';\n  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n};\n\nvar getProtocol = function () {\n  return getInternalURLState(this).scheme + ':';\n};\n\nvar getUsername = function () {\n  return getInternalURLState(this).username;\n};\n\nvar getPassword = function () {\n  return getInternalURLState(this).password;\n};\n\nvar getHost = function () {\n  var url = getInternalURLState(this);\n  var host = url.host;\n  var port = url.port;\n  return host === null ? '' : port === null ? serializeHost(host) : serializeHost(host) + ':' + port;\n};\n\nvar getHostname = function () {\n  var host = getInternalURLState(this).host;\n  return host === null ? '' : serializeHost(host);\n};\n\nvar getPort = function () {\n  var port = getInternalURLState(this).port;\n  return port === null ? '' : $toString(port);\n};\n\nvar getPathname = function () {\n  var url = getInternalURLState(this);\n  var path = url.path;\n  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';\n};\n\nvar getSearch = function () {\n  var query = getInternalURLState(this).query;\n  return query ? '?' + query : '';\n};\n\nvar getSearchParams = function () {\n  return getInternalURLState(this).searchParams;\n};\n\nvar getHash = function () {\n  var fragment = getInternalURLState(this).fragment;\n  return fragment ? '#' + fragment : '';\n};\n\nvar accessorDescriptor = function (getter, setter) {\n  return {\n    get: getter,\n    set: setter,\n    configurable: true,\n    enumerable: true\n  };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor(serializeURL, function (href) {\n      var url = getInternalURLState(this);\n      var urlString = $toString(href);\n      var failure = parseURL(url, urlString);\n      if (failure) throw TypeError(failure);\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor(getOrigin),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor(getProtocol, function (protocol) {\n      var url = getInternalURLState(this);\n      parseURL(url, $toString(protocol) + ':', SCHEME_START);\n    }),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor(getUsername, function (username) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom($toString(username));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.username = '';\n\n      for (var i = 0; i < codePoints.length; i++) {\n        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor(getPassword, function (password) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom($toString(password));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.password = '';\n\n      for (var i = 0; i < codePoints.length; i++) {\n        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor(getHost, function (host) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, $toString(host), HOST);\n    }),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor(getHostname, function (hostname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, $toString(hostname), HOSTNAME);\n    }),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor(getPort, function (port) {\n      var url = getInternalURLState(this);\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      port = $toString(port);\n      if (port == '') url.port = null;else parseURL(url, port, PORT);\n    }),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor(getPathname, function (pathname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      url.path = [];\n      parseURL(url, $toString(pathname), PATH_START);\n    }),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor(getSearch, function (search) {\n      var url = getInternalURLState(this);\n      search = $toString(search);\n\n      if (search == '') {\n        url.query = null;\n      } else {\n        if ('?' == charAt(search, 0)) search = stringSlice(search, 1);\n        url.query = '';\n        parseURL(url, search, QUERY);\n      }\n\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor(getSearchParams),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor(getHash, function (hash) {\n      var url = getInternalURLState(this);\n      hash = $toString(hash);\n\n      if (hash == '') {\n        url.fragment = null;\n        return;\n      }\n\n      if ('#' == charAt(hash, 0)) hash = stringSlice(hash, 1);\n      url.fragment = '';\n      parseURL(url, hash, FRAGMENT);\n    })\n  });\n} // `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n\n\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return call(serializeURL, this);\n}, {\n  enumerable: true\n}); // `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\n\nredefine(URLPrototype, 'toString', function toString() {\n  return call(serializeURL, this);\n}, {\n  enumerable: true\n});\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL; // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', bind(nativeCreateObjectURL, NativeURL)); // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', bind(nativeRevokeObjectURL, NativeURL));\n}\n\nsetToStringTag(URLConstructor, 'URL');\n$({\n  global: true,\n  forced: !USE_NATIVE_URL,\n  sham: !DESCRIPTORS\n}, {\n  URL: URLConstructor\n});","map":{"version":3,"sources":["/Users/christiandanos/Desktop/sarasuki/base/node_modules/core-js/modules/web.url.js"],"names":["require","$","DESCRIPTORS","USE_NATIVE_URL","global","bind","call","uncurryThis","defineProperties","redefine","anInstance","hasOwn","assign","arrayFrom","arraySlice","codeAt","toASCII","$toString","setToStringTag","URLSearchParamsModule","InternalStateModule","setInternalState","set","getInternalURLState","getterFor","URLSearchParams","getInternalSearchParamsState","getState","NativeURL","URL","TypeError","parseInt","floor","Math","pow","charAt","exec","join","numberToString","toString","pop","push","replace","shift","split","stringSlice","slice","toLowerCase","unshift","INVALID_AUTHORITY","INVALID_SCHEME","INVALID_HOST","INVALID_PORT","ALPHA","ALPHANUMERIC","DIGIT","HEX_START","OCT","DEC","HEX","FORBIDDEN_HOST_CODE_POINT","FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT","LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE","TAB_AND_NEW_LINE","EOF","parseHost","url","input","result","codePoints","index","length","parseIPv6","host","isSpecial","percentEncode","C0ControlPercentEncodeSet","parseIPv4","parts","partsLength","numbers","part","radix","number","ipv4","address","pieceIndex","compress","pointer","value","numbersSeen","ipv4Piece","swaps","swap","chr","findLongestZeroSequence","ipv6","maxIndex","maxLength","currStart","currLength","serializeHost","ignore0","fragmentPercentEncodeSet","pathPercentEncodeSet","userinfoPercentEncodeSet","code","encodeURIComponent","specialSchemes","ftp","file","http","https","ws","wss","scheme","includesCredentials","username","password","cannotHaveUsernamePasswordPort","cannotBeABaseURL","isWindowsDriveLetter","string","normalized","second","startsWithWindowsDriveLetter","third","shortenURLsPath","path","pathSize","isSingleDot","segment","isDoubleDot","SCHEME_START","SCHEME","NO_SCHEME","SPECIAL_RELATIVE_OR_AUTHORITY","PATH_OR_AUTHORITY","RELATIVE","RELATIVE_SLASH","SPECIAL_AUTHORITY_SLASHES","SPECIAL_AUTHORITY_IGNORE_SLASHES","AUTHORITY","HOST","HOSTNAME","PORT","FILE","FILE_SLASH","FILE_HOST","PATH_START","PATH","CANNOT_BE_A_BASE_URL_PATH","QUERY","FRAGMENT","parseURL","stateOverride","base","state","buffer","seenAt","seenBracket","seenPasswordToken","bufferCodePoints","failure","port","query","fragment","i","codePoint","encodedCodePoints","URLConstructor","that","URLPrototype","arguments","undefined","urlString","type","baseState","error","searchParams","searchParamsState","updateSearchParams","updateURL","href","serializeURL","origin","getOrigin","protocol","getProtocol","getUsername","getPassword","getHost","hostname","getHostname","getPort","pathname","getPathname","search","getSearch","getSearchParams","hash","getHash","prototype","output","accessorDescriptor","getter","setter","get","configurable","enumerable","toJSON","nativeCreateObjectURL","createObjectURL","nativeRevokeObjectURL","revokeObjectURL","forced","sham"],"mappings":"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","sourcesContent":["'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.string.iterator');\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar global = require('../internals/global');\nvar bind = require('../internals/function-bind-context');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineProperties = require('../internals/object-define-properties');\nvar redefine = require('../internals/redefine');\nvar anInstance = require('../internals/an-instance');\nvar hasOwn = require('../internals/has-own-property');\nvar assign = require('../internals/object-assign');\nvar arrayFrom = require('../internals/array-from');\nvar arraySlice = require('../internals/array-slice');\nvar codeAt = require('../internals/string-multibyte').codeAt;\nvar toASCII = require('../internals/string-punycode-to-ascii');\nvar $toString = require('../internals/to-string');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\n\nvar NativeURL = global.URL;\nvar TypeError = global.TypeError;\nvar parseInt = global.parseInt;\nvar floor = Math.floor;\nvar pow = Math.pow;\nvar charAt = uncurryThis(''.charAt);\nvar exec = uncurryThis(/./.exec);\nvar join = uncurryThis([].join);\nvar numberToString = uncurryThis(1.0.toString);\nvar pop = uncurryThis([].pop);\nvar push = uncurryThis([].push);\nvar replace = uncurryThis(''.replace);\nvar shift = uncurryThis([].shift);\nvar split = uncurryThis(''.split);\nvar stringSlice = uncurryThis(''.slice);\nvar toLowerCase = uncurryThis(''.toLowerCase);\nvar unshift = uncurryThis([].unshift);\n\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\n\nvar ALPHA = /[a-z]/i;\n// eslint-disable-next-line regexp/no-obscure-range -- safe\nvar ALPHANUMERIC = /[\\d+-.a-z]/i;\nvar DIGIT = /\\d/;\nvar HEX_START = /^0x/i;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\da-f]+$/i;\n/* eslint-disable regexp/no-control-character -- safe */\nvar FORBIDDEN_HOST_CODE_POINT = /[\\0\\t\\n\\r #%/:<>?@[\\\\\\]^|]/;\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\0\\t\\n\\r #/:<>?@[\\\\\\]^|]/;\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u0020]+|[\\u0000-\\u0020]+$/g;\nvar TAB_AND_NEW_LINE = /[\\t\\n\\r]/g;\n/* eslint-enable regexp/no-control-character -- safe */\nvar EOF;\n\nvar parseHost = function (url, input) {\n  var result, codePoints, index;\n  if (charAt(input, 0) == '[') {\n    if (charAt(input, input.length - 1) != ']') return INVALID_HOST;\n    result = parseIPv6(stringSlice(input, 1, -1));\n    if (!result) return INVALID_HOST;\n    url.host = result;\n  // opaque host\n  } else if (!isSpecial(url)) {\n    if (exec(FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT, input)) return INVALID_HOST;\n    result = '';\n    codePoints = arrayFrom(input);\n    for (index = 0; index < codePoints.length; index++) {\n      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n    }\n    url.host = result;\n  } else {\n    input = toASCII(input);\n    if (exec(FORBIDDEN_HOST_CODE_POINT, input)) return INVALID_HOST;\n    result = parseIPv4(input);\n    if (result === null) return INVALID_HOST;\n    url.host = result;\n  }\n};\n\nvar parseIPv4 = function (input) {\n  var parts = split(input, '.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.length--;\n  }\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n    if (part.length > 1 && charAt(part, 0) == '0') {\n      radix = exec(HEX_START, part) ? 16 : 8;\n      part = stringSlice(part, radix == 8 ? 1 : 2);\n    }\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!exec(radix == 10 ? DEC : radix == 8 ? OCT : HEX, part)) return input;\n      number = parseInt(part, radix);\n    }\n    push(numbers, number);\n  }\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n  ipv4 = pop(numbers);\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n  return ipv4;\n};\n\n// eslint-disable-next-line max-statements -- TODO\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var chr = function () {\n    return charAt(input, pointer);\n  };\n\n  if (chr() == ':') {\n    if (charAt(input, 1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n  while (chr()) {\n    if (pieceIndex == 8) return;\n    if (chr() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n    value = length = 0;\n    while (length < 4 && exec(HEX, chr())) {\n      value = value * 16 + parseInt(chr(), 16);\n      pointer++;\n      length++;\n    }\n    if (chr() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n      while (chr()) {\n        ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (chr() == '.' && numbersSeen < 4) pointer++;\n          else return;\n        }\n        if (!exec(DIGIT, chr())) return;\n        while (exec(DIGIT, chr())) {\n          number = parseInt(chr(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;\n          else if (ipv4Piece == 0) return;\n          else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n      if (numbersSeen != 4) return;\n      break;\n    } else if (chr() == ':') {\n      pointer++;\n      if (!chr()) return;\n    } else if (chr()) return;\n    address[pieceIndex++] = value;\n  }\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n  return maxIndex;\n};\n\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0;\n  // ipv4\n  if (typeof host == 'number') {\n    result = [];\n    for (index = 0; index < 4; index++) {\n      unshift(result, host % 256);\n      host = floor(host / 256);\n    } return join(result, '.');\n  // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += numberToString(host[index], 16);\n        if (index < 7) result += ':';\n      }\n    }\n    return '[' + result + ']';\n  } return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1, '\"': 1, '<': 1, '>': 1, '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1, '?': 1, '{': 1, '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\\\': 1, ']': 1, '^': 1, '|': 1\n});\n\nvar percentEncode = function (chr, set) {\n  var code = codeAt(chr, 0);\n  return code > 0x20 && code < 0x7F && !hasOwn(set, chr) ? chr : encodeURIComponent(chr);\n};\n\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nvar isSpecial = function (url) {\n  return hasOwn(specialSchemes, url.scheme);\n};\n\nvar includesCredentials = function (url) {\n  return url.username != '' || url.password != '';\n};\n\nvar cannotHaveUsernamePasswordPort = function (url) {\n  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n};\n\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && exec(ALPHA, charAt(string, 0))\n    && ((second = charAt(string, 1)) == ':' || (!normalized && second == '|'));\n};\n\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(stringSlice(string, 0, 2)) && (\n    string.length == 2 ||\n    ((third = charAt(string, 2)) === '/' || third === '\\\\' || third === '?' || third === '#')\n  );\n};\n\nvar shortenURLsPath = function (url) {\n  var path = url.path;\n  var pathSize = path.length;\n  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n    path.length--;\n  }\n};\n\nvar isSingleDot = function (segment) {\n  return segment === '.' || toLowerCase(segment) === '%2e';\n};\n\nvar isDoubleDot = function (segment) {\n  segment = toLowerCase(segment);\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n};\n\n// States:\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\n\n// eslint-disable-next-line max-statements -- TODO\nvar parseURL = function (url, input, stateOverride, base) {\n  var state = stateOverride || SCHEME_START;\n  var pointer = 0;\n  var buffer = '';\n  var seenAt = false;\n  var seenBracket = false;\n  var seenPasswordToken = false;\n  var codePoints, chr, bufferCodePoints, failure;\n\n  if (!stateOverride) {\n    url.scheme = '';\n    url.username = '';\n    url.password = '';\n    url.host = null;\n    url.port = null;\n    url.path = [];\n    url.query = null;\n    url.fragment = null;\n    url.cannotBeABaseURL = false;\n    input = replace(input, LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n  }\n\n  input = replace(input, TAB_AND_NEW_LINE, '');\n\n  codePoints = arrayFrom(input);\n\n  while (pointer <= codePoints.length) {\n    chr = codePoints[pointer];\n    switch (state) {\n      case SCHEME_START:\n        if (chr && exec(ALPHA, chr)) {\n          buffer += toLowerCase(chr);\n          state = SCHEME;\n        } else if (!stateOverride) {\n          state = NO_SCHEME;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case SCHEME:\n        if (chr && (exec(ALPHANUMERIC, chr) || chr == '+' || chr == '-' || chr == '.')) {\n          buffer += toLowerCase(chr);\n        } else if (chr == ':') {\n          if (stateOverride && (\n            (isSpecial(url) != hasOwn(specialSchemes, buffer)) ||\n            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||\n            (url.scheme == 'file' && !url.host)\n          )) return;\n          url.scheme = buffer;\n          if (stateOverride) {\n            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n            return;\n          }\n          buffer = '';\n          if (url.scheme == 'file') {\n            state = FILE;\n          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n            state = SPECIAL_RELATIVE_OR_AUTHORITY;\n          } else if (isSpecial(url)) {\n            state = SPECIAL_AUTHORITY_SLASHES;\n          } else if (codePoints[pointer + 1] == '/') {\n            state = PATH_OR_AUTHORITY;\n            pointer++;\n          } else {\n            url.cannotBeABaseURL = true;\n            push(url.path, '');\n            state = CANNOT_BE_A_BASE_URL_PATH;\n          }\n        } else if (!stateOverride) {\n          buffer = '';\n          state = NO_SCHEME;\n          pointer = 0;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case NO_SCHEME:\n        if (!base || (base.cannotBeABaseURL && chr != '#')) return INVALID_SCHEME;\n        if (base.cannotBeABaseURL && chr == '#') {\n          url.scheme = base.scheme;\n          url.path = arraySlice(base.path);\n          url.query = base.query;\n          url.fragment = '';\n          url.cannotBeABaseURL = true;\n          state = FRAGMENT;\n          break;\n        }\n        state = base.scheme == 'file' ? FILE : RELATIVE;\n        continue;\n\n      case SPECIAL_RELATIVE_OR_AUTHORITY:\n        if (chr == '/' && codePoints[pointer + 1] == '/') {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          pointer++;\n        } else {\n          state = RELATIVE;\n          continue;\n        } break;\n\n      case PATH_OR_AUTHORITY:\n        if (chr == '/') {\n          state = AUTHORITY;\n          break;\n        } else {\n          state = PATH;\n          continue;\n        }\n\n      case RELATIVE:\n        url.scheme = base.scheme;\n        if (chr == EOF) {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = arraySlice(base.path);\n          url.query = base.query;\n        } else if (chr == '/' || (chr == '\\\\' && isSpecial(url))) {\n          state = RELATIVE_SLASH;\n        } else if (chr == '?') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = arraySlice(base.path);\n          url.query = '';\n          state = QUERY;\n        } else if (chr == '#') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = arraySlice(base.path);\n          url.query = base.query;\n          url.fragment = '';\n          state = FRAGMENT;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = arraySlice(base.path);\n          url.path.length--;\n          state = PATH;\n          continue;\n        } break;\n\n      case RELATIVE_SLASH:\n        if (isSpecial(url) && (chr == '/' || chr == '\\\\')) {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        } else if (chr == '/') {\n          state = AUTHORITY;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          state = PATH;\n          continue;\n        } break;\n\n      case SPECIAL_AUTHORITY_SLASHES:\n        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        if (chr != '/' || charAt(buffer, pointer + 1) != '/') continue;\n        pointer++;\n        break;\n\n      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n        if (chr != '/' && chr != '\\\\') {\n          state = AUTHORITY;\n          continue;\n        } break;\n\n      case AUTHORITY:\n        if (chr == '@') {\n          if (seenAt) buffer = '%40' + buffer;\n          seenAt = true;\n          bufferCodePoints = arrayFrom(buffer);\n          for (var i = 0; i < bufferCodePoints.length; i++) {\n            var codePoint = bufferCodePoints[i];\n            if (codePoint == ':' && !seenPasswordToken) {\n              seenPasswordToken = true;\n              continue;\n            }\n            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n            if (seenPasswordToken) url.password += encodedCodePoints;\n            else url.username += encodedCodePoints;\n          }\n          buffer = '';\n        } else if (\n          chr == EOF || chr == '/' || chr == '?' || chr == '#' ||\n          (chr == '\\\\' && isSpecial(url))\n        ) {\n          if (seenAt && buffer == '') return INVALID_AUTHORITY;\n          pointer -= arrayFrom(buffer).length + 1;\n          buffer = '';\n          state = HOST;\n        } else buffer += chr;\n        break;\n\n      case HOST:\n      case HOSTNAME:\n        if (stateOverride && url.scheme == 'file') {\n          state = FILE_HOST;\n          continue;\n        } else if (chr == ':' && !seenBracket) {\n          if (buffer == '') return INVALID_HOST;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PORT;\n          if (stateOverride == HOSTNAME) return;\n        } else if (\n          chr == EOF || chr == '/' || chr == '?' || chr == '#' ||\n          (chr == '\\\\' && isSpecial(url))\n        ) {\n          if (isSpecial(url) && buffer == '') return INVALID_HOST;\n          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PATH_START;\n          if (stateOverride) return;\n          continue;\n        } else {\n          if (chr == '[') seenBracket = true;\n          else if (chr == ']') seenBracket = false;\n          buffer += chr;\n        } break;\n\n      case PORT:\n        if (exec(DIGIT, chr)) {\n          buffer += chr;\n        } else if (\n          chr == EOF || chr == '/' || chr == '?' || chr == '#' ||\n          (chr == '\\\\' && isSpecial(url)) ||\n          stateOverride\n        ) {\n          if (buffer != '') {\n            var port = parseInt(buffer, 10);\n            if (port > 0xFFFF) return INVALID_PORT;\n            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;\n            buffer = '';\n          }\n          if (stateOverride) return;\n          state = PATH_START;\n          continue;\n        } else return INVALID_PORT;\n        break;\n\n      case FILE:\n        url.scheme = 'file';\n        if (chr == '/' || chr == '\\\\') state = FILE_SLASH;\n        else if (base && base.scheme == 'file') {\n          if (chr == EOF) {\n            url.host = base.host;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n          } else if (chr == '?') {\n            url.host = base.host;\n            url.path = arraySlice(base.path);\n            url.query = '';\n            state = QUERY;\n          } else if (chr == '#') {\n            url.host = base.host;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            if (!startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              shortenURLsPath(url);\n            }\n            state = PATH;\n            continue;\n          }\n        } else {\n          state = PATH;\n          continue;\n        } break;\n\n      case FILE_SLASH:\n        if (chr == '/' || chr == '\\\\') {\n          state = FILE_HOST;\n          break;\n        }\n        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {\n          if (isWindowsDriveLetter(base.path[0], true)) push(url.path, base.path[0]);\n          else url.host = base.host;\n        }\n        state = PATH;\n        continue;\n\n      case FILE_HOST:\n        if (chr == EOF || chr == '/' || chr == '\\\\' || chr == '?' || chr == '#') {\n          if (!stateOverride && isWindowsDriveLetter(buffer)) {\n            state = PATH;\n          } else if (buffer == '') {\n            url.host = '';\n            if (stateOverride) return;\n            state = PATH_START;\n          } else {\n            failure = parseHost(url, buffer);\n            if (failure) return failure;\n            if (url.host == 'localhost') url.host = '';\n            if (stateOverride) return;\n            buffer = '';\n            state = PATH_START;\n          } continue;\n        } else buffer += chr;\n        break;\n\n      case PATH_START:\n        if (isSpecial(url)) {\n          state = PATH;\n          if (chr != '/' && chr != '\\\\') continue;\n        } else if (!stateOverride && chr == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (!stateOverride && chr == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (chr != EOF) {\n          state = PATH;\n          if (chr != '/') continue;\n        } break;\n\n      case PATH:\n        if (\n          chr == EOF || chr == '/' ||\n          (chr == '\\\\' && isSpecial(url)) ||\n          (!stateOverride && (chr == '?' || chr == '#'))\n        ) {\n          if (isDoubleDot(buffer)) {\n            shortenURLsPath(url);\n            if (chr != '/' && !(chr == '\\\\' && isSpecial(url))) {\n              push(url.path, '');\n            }\n          } else if (isSingleDot(buffer)) {\n            if (chr != '/' && !(chr == '\\\\' && isSpecial(url))) {\n              push(url.path, '');\n            }\n          } else {\n            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n              if (url.host) url.host = '';\n              buffer = charAt(buffer, 0) + ':'; // normalize windows drive letter\n            }\n            push(url.path, buffer);\n          }\n          buffer = '';\n          if (url.scheme == 'file' && (chr == EOF || chr == '?' || chr == '#')) {\n            while (url.path.length > 1 && url.path[0] === '') {\n              shift(url.path);\n            }\n          }\n          if (chr == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          }\n        } else {\n          buffer += percentEncode(chr, pathPercentEncodeSet);\n        } break;\n\n      case CANNOT_BE_A_BASE_URL_PATH:\n        if (chr == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (chr == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (chr != EOF) {\n          url.path[0] += percentEncode(chr, C0ControlPercentEncodeSet);\n        } break;\n\n      case QUERY:\n        if (!stateOverride && chr == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (chr != EOF) {\n          if (chr == \"'\" && isSpecial(url)) url.query += '%27';\n          else if (chr == '#') url.query += '%23';\n          else url.query += percentEncode(chr, C0ControlPercentEncodeSet);\n        } break;\n\n      case FRAGMENT:\n        if (chr != EOF) url.fragment += percentEncode(chr, fragmentPercentEncodeSet);\n        break;\n    }\n\n    pointer++;\n  }\n};\n\n// `URL` constructor\n// https://url.spec.whatwg.org/#url-class\nvar URLConstructor = function URL(url /* , base */) {\n  var that = anInstance(this, URLPrototype);\n  var base = arguments.length > 1 ? arguments[1] : undefined;\n  var urlString = $toString(url);\n  var state = setInternalState(that, { type: 'URL' });\n  var baseState, failure;\n  if (base !== undefined) {\n    try {\n      baseState = getInternalURLState(base);\n    } catch (error) {\n      failure = parseURL(baseState = {}, $toString(base));\n      if (failure) throw TypeError(failure);\n    }\n  }\n  failure = parseURL(state, urlString, null, baseState);\n  if (failure) throw TypeError(failure);\n  var searchParams = state.searchParams = new URLSearchParams();\n  var searchParamsState = getInternalSearchParamsState(searchParams);\n  searchParamsState.updateSearchParams(state.query);\n  searchParamsState.updateURL = function () {\n    state.query = $toString(searchParams) || null;\n  };\n  if (!DESCRIPTORS) {\n    that.href = call(serializeURL, that);\n    that.origin = call(getOrigin, that);\n    that.protocol = call(getProtocol, that);\n    that.username = call(getUsername, that);\n    that.password = call(getPassword, that);\n    that.host = call(getHost, that);\n    that.hostname = call(getHostname, that);\n    that.port = call(getPort, that);\n    that.pathname = call(getPathname, that);\n    that.search = call(getSearch, that);\n    that.searchParams = call(getSearchParams, that);\n    that.hash = call(getHash, that);\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar serializeURL = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var username = url.username;\n  var password = url.password;\n  var host = url.host;\n  var port = url.port;\n  var path = url.path;\n  var query = url.query;\n  var fragment = url.fragment;\n  var output = scheme + ':';\n  if (host !== null) {\n    output += '//';\n    if (includesCredentials(url)) {\n      output += username + (password ? ':' + password : '') + '@';\n    }\n    output += serializeHost(host);\n    if (port !== null) output += ':' + port;\n  } else if (scheme == 'file') output += '//';\n  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';\n  if (query !== null) output += '?' + query;\n  if (fragment !== null) output += '#' + fragment;\n  return output;\n};\n\nvar getOrigin = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var port = url.port;\n  if (scheme == 'blob') try {\n    return new URLConstructor(scheme.path[0]).origin;\n  } catch (error) {\n    return 'null';\n  }\n  if (scheme == 'file' || !isSpecial(url)) return 'null';\n  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n};\n\nvar getProtocol = function () {\n  return getInternalURLState(this).scheme + ':';\n};\n\nvar getUsername = function () {\n  return getInternalURLState(this).username;\n};\n\nvar getPassword = function () {\n  return getInternalURLState(this).password;\n};\n\nvar getHost = function () {\n  var url = getInternalURLState(this);\n  var host = url.host;\n  var port = url.port;\n  return host === null ? ''\n    : port === null ? serializeHost(host)\n    : serializeHost(host) + ':' + port;\n};\n\nvar getHostname = function () {\n  var host = getInternalURLState(this).host;\n  return host === null ? '' : serializeHost(host);\n};\n\nvar getPort = function () {\n  var port = getInternalURLState(this).port;\n  return port === null ? '' : $toString(port);\n};\n\nvar getPathname = function () {\n  var url = getInternalURLState(this);\n  var path = url.path;\n  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';\n};\n\nvar getSearch = function () {\n  var query = getInternalURLState(this).query;\n  return query ? '?' + query : '';\n};\n\nvar getSearchParams = function () {\n  return getInternalURLState(this).searchParams;\n};\n\nvar getHash = function () {\n  var fragment = getInternalURLState(this).fragment;\n  return fragment ? '#' + fragment : '';\n};\n\nvar accessorDescriptor = function (getter, setter) {\n  return { get: getter, set: setter, configurable: true, enumerable: true };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor(serializeURL, function (href) {\n      var url = getInternalURLState(this);\n      var urlString = $toString(href);\n      var failure = parseURL(url, urlString);\n      if (failure) throw TypeError(failure);\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor(getOrigin),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor(getProtocol, function (protocol) {\n      var url = getInternalURLState(this);\n      parseURL(url, $toString(protocol) + ':', SCHEME_START);\n    }),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor(getUsername, function (username) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom($toString(username));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.username = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor(getPassword, function (password) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom($toString(password));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.password = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor(getHost, function (host) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, $toString(host), HOST);\n    }),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor(getHostname, function (hostname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, $toString(hostname), HOSTNAME);\n    }),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor(getPort, function (port) {\n      var url = getInternalURLState(this);\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      port = $toString(port);\n      if (port == '') url.port = null;\n      else parseURL(url, port, PORT);\n    }),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor(getPathname, function (pathname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      url.path = [];\n      parseURL(url, $toString(pathname), PATH_START);\n    }),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor(getSearch, function (search) {\n      var url = getInternalURLState(this);\n      search = $toString(search);\n      if (search == '') {\n        url.query = null;\n      } else {\n        if ('?' == charAt(search, 0)) search = stringSlice(search, 1);\n        url.query = '';\n        parseURL(url, search, QUERY);\n      }\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor(getSearchParams),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor(getHash, function (hash) {\n      var url = getInternalURLState(this);\n      hash = $toString(hash);\n      if (hash == '') {\n        url.fragment = null;\n        return;\n      }\n      if ('#' == charAt(hash, 0)) hash = stringSlice(hash, 1);\n      url.fragment = '';\n      parseURL(url, hash, FRAGMENT);\n    })\n  });\n}\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return call(serializeURL, this);\n}, { enumerable: true });\n\n// `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\nredefine(URLPrototype, 'toString', function toString() {\n  return call(serializeURL, this);\n}, { enumerable: true });\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n  // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', bind(nativeCreateObjectURL, NativeURL));\n  // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', bind(nativeRevokeObjectURL, NativeURL));\n}\n\nsetToStringTag(URLConstructor, 'URL');\n\n$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {\n  URL: URLConstructor\n});\n"]},"metadata":{},"sourceType":"script"}